- name: Save locales
  copy:
    content: "en_US.UTF-8 UTF-8"
    dest: /etc/locale.gen
- name: Generate locales
  locale_gen:
    name: "{{ item }}"
  with_items:
    - en_US.UTF-8

- name: Generate locales via devconf
  debconf:
    name: locales
    question: locales/locales_to_be_generated
    value: en_US.UTF-8 UTF-8
    vtype: multiselect
  when:
    - ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
- name: Set default locale to en_US.UTF-8 via devconf
  debconf:
    name: locales
    question: locales/default_environment_locale
    value: en_US.UTF-8
    vtype: select
  when:
    - ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: Include Gentoo specific provisioning
  include_tasks: gentoo.yml
  when:
    - ansible_distribution == "Gentoo"

- name: Include Debian 9 specific provisioning
  include_tasks: debian9.yml
  when:
    - ansible_distribution == "Debian"
    - ansible_distribution_major_version == "9"
- name: Include Ubuntu 18 specific provisioning
  include_tasks: ubuntu18.yml
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version == "18"

- name: Place the files to add the path into the PATH
  template:
    src: "default/etc/profile.d/{{ item }}.j2"
    dest: "/etc/profile.d/{{ item }}"
    mode: u=rwx,g=rx,o=rx
  with_items:
    - ghq.sh
    - go.sh
    - locales.sh

- name: Stat Hub command
  stat:
    path: /usr/local/bin/hub
  register: hub_command
- name: Install Hub command
  when: hub_command.stat.executable is not defined
  block:
    - name: Create temporary directory for Hub command
      tempfile:
        state: directory
      register: temporary_directory_for_hub_command
    - name: Unarchive Hub command
      unarchive:
        src: "https://github.com/github/hub/releases/download/v2.13.0/hub-{{ ansible_system | lower }}-amd64-2.13.0.tgz"
        dest: "{{ temporary_directory_for_hub_command.path }}"
        remote_src: true
        extra_opts: --strip-components=1
    - name: Add exec permission to install script
      file:
        path: "{{ temporary_directory_for_hub_command.path }}/install"
        state: touch
        mode: a+rx
    - name: Run install script for Hub command
      script: /bin/bash "{{ temporary_directory_for_hub_command.path }}/install"

- name: Unarchive go
  unarchive:
    src: https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz
    dest: /opt
    remote_src: true

- name: Install direnv via GitHub
  get_url:
    url: "https://github.com/direnv/direnv/releases/download/v2.20.0/direnv.{{ ansible_system | lower }}-amd64"
    dest: /usr/local/bin/direnv
    mode: u=rwx,g=rx,o=rx

- name: Create directory for ghq
  file:
    path: /opt/ghq
    state: directory
- name: Unarchive ghq
  unarchive:
    src: "https://github.com/motemen/ghq/releases/download/v0.12.9/ghq_{{ ansible_system | lower }}_amd64.zip"
    dest: /opt/ghq
    remote_src: true
    extra_opts: "-j"
  args:
    creates: /opt/ghq/ghq

- name: Install fzf via GitHub
  get_url:
    url: "https://github.com/junegunn/fzf-bin/releases/download/0.19.0/fzf-0.19.0-{{ ansible_system | lower }}_amd64.tgz"
    dest: /usr/local/bin/fzf
    mode: u=rwx,g=rx,o=rx
- name: Install fzf-tmux via GitHub
  get_url:
    url: https://raw.githubusercontent.com/junegunn/fzf/0.19.0/bin/fzf-tmux
    dest: /usr/local/bin/fzf-tmux
    mode: u=rwx,g=rx,o=rx
